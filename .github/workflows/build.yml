name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master, WindowsBuild]
  pull_request:
    branches: [master, WindowsBuild]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Build"
  LinuxBuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
        os: [windows-latest, ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: "x64"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Build App
        run: python3 setup.py build

      - name: Create Windows Installer
        if: github.ref == 'refs/heads/WindowsBuild'
        run: python3 setup bdist_msi

        # Upload build files
      - name: Archive build files
        uses: actions/upload-artifact@v2
        with:
          name: Build Files
          path: build

      - name: Display directory
        run: ls

  WindowsBuild:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: "x64"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Create Windows Installer
        # if: github.ref == 'refs/heads/WindowsBuild'
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            python3 setup.py bdist_msi
          fi
        shell: bash

        # Upload build files
      # - name: Archive build files
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Windows Build Files
      #     path: build

      - name: Display directory
        run: ls

  # Download:
  #   name: Download artifacts
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download build files
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Build and Windows Installer
  #         path: build
