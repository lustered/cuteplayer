name: Windows Build

on:
  push:
    branches:
      - master
      - WindowsBuild

  pull_request:
    branches:
      - master
      - WindowsBuild

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  WindowsBuild:
    name: Build for Windows
    runs-on: windows-latest
    if: github.ref == 'refs/heads/WindowsBuild'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          lfs: true
          ref: WindowsBuild

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      # - name: Checkout LFS files
      #   run: git lfs checkout

      - name: LFS pull
        run: git lfs pull

      - uses: actions/setup-python@v2
        with:
          python-version: "3.6"
          architecture: "x64"

      - name: Cache python3 dependencies
        uses: actions/cache@v2
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Create Windows Installer
        run: python3 setup.py bdist_msi
        shell: bash

      # Upload build files
      - name: Archive build files
        uses: actions/upload-artifact@v2
        with:
          name: Windows Installer
          path: cuteplayer-installer/cuteplayer-1.0-amd64.msi

      - name: Display directory
        run: tree
